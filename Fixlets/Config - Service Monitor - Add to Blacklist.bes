<?xml version="1.0" encoding="UTF-8"?>

<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Config - Service Monitor - Add to Blacklist</Title>
		<Description><![CDATA[<DIV id=fixletMessage2 class=FixletMessage>
<DIV id=paramFixletDescription>
<P>Blacklist a service from service monitoring!</P><script>
loaded = false;
var CODE_SITE_NAME = 'BES Support' ; 
function loadScript (siteName, callback) {
loaded = false;
var relevanceQuery ='( value of it) of (mime fields of (bes fixlets whose ( name of it = "Parameterized Fixlet Library" and  name of site of it = \"' + siteName + '\" ))) whose (name of it = "vrt_utils.js")'
var code = EvaluateRelevance(relevanceQuery);
var head = document.getElementsByTagName("head")[0]; 
var script   = document.createElement("script");
script.type  = "text/javascript";
script.text = code;
head.appendChild(script);
callback();
}
function scriptLoaded(){
if (!loaded){ 	
if ( typeof FixletUtils !== 'undefined') {
loaded = true;
/*
* Pleas Note: The following code will be moved to library with next publish of lib and user will have to only call method 	
*/
var relQuery = "(messages of it) of bes fixlets whose (name of it = \"Parameterized Fixlet Library\" and ((name of it ) of site of it = \"" + CODE_SITE_NAME +"\" ))";
var messages = EvaluateRelevance(relQuery);
var regex = /\s*<DIV id=globalizationMessageDiv  style="display:none;">([\x00-\x7F]+)\s*<\/Div>/i;
var matches = regex.exec(messages);
matches[1]=matches[1].replace(/<br>/gi,"");
eval(matches[1]);
FixletUtils.initFixletRender();
} } } 	
loadScript(CODE_SITE_NAME, scriptLoaded);
</script> 
<DIV class=FixletProperty></DIV></DIV></DIV>]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Category></Category>
		<Source></Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2016-05-07</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>parametermetadatatag</Name>
			<Value>{   "Section1": {     "Name": "ServiceConfig",     "Title": "Service List",     "UIType": "accordion",     "Values": [       {         "Name": "Services",         "Title": "Service List (Semi-colon Separated)",         "Description": "Service List",         "ValueType": "relevance",         "UIType": "TextBox"       }     ]   } }</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">
setting "besservicemonitor-settings-blacklist"="{concatenations ";" of (substrings separated by ";" of Parameter "Services" of action;substrings separated by ";" of values of settings "besservicemonitor-setting-blacklist" of client)}" on "{now}" for client</ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</Action>
	</Fixlet>
</BES>
