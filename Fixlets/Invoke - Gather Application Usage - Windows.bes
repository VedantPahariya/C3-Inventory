<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Gather Application Usage - Windows</Title>
		<Description><![CDATA[<P>This fixlet gathers the currently in user executables that are parented by an explorer.exe process (essentially processes in a user session). </P>
<P>This fixlet captures the last PPID of the recorded application and uses that to prevent double counting. This causes some interesting behavior:</P>
<UL>
<LI>An application is only counted once per user session 
<LI>Applications that launch multiple executables parented by the explorer.exe process will be continually recounted and may have incorrect usage values</LI></UL>
<P>Information about the in-use applications is then stored in the registry:</P>
<P>"HKLM:\Software\Inventory" = Root, Empty</P>
<P>"HKLM:\Software\Inventory\Last Usage"<BR>Name: (Application Executable)-(Version of EXE)<BR>Value: Last date used formatted in BigFix Time format</P>
<P>"HKLM:\Software\Inventory\Count"<BR>Name: (Application Executable)-(Version of EXE)<BR>Value: Number of launches (counted only once per user session)</P>
<P>"HKLM:\Software\Inventory\LastPID"<BR>Name: (Application Executable)-(Version of EXE)<BR>Value: Last PPID seen for this application. To attempt to filter out launches</P>
<P><STRONG>Note:</STRONG><BR>AppX Applications run under runtimebroker.exe and are excluded fro this analysis.</P>]]></Description>
		<Relevance><![CDATA[windows of operating system and version of operating system >= "6.0"]]></Relevance>
		<Relevance>exists logged on user</Relevance>
		<Source>Internal</Source>
		<SourceReleaseDate>2016-04-13</SourceReleaseDate>
		<MIMEField>
			<Name>bigfixme-added-time</Name>
			<Value>Thu, 14 Apr 2016 06:35:52 GMT</Value>
		</MIMEField>
		<MIMEField>
			<Name>bigfixme-modification-time</Name>
			<Value>Thu, 14 Apr 2016 06:35:52 GMT</Value>
		</MIMEField>
		<MIMEField>
			<Name>bigfixme-keywords</Name>
			<Value>Poor Man's Inventory</Value>
		</MIMEField>
		<MIMEField>
			<Name>bigfixme-ID</Name>
			<Value>12947</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Thu, 14 Apr 2016 16:26:12 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[action uses wow64 redirection {not x64 of operating system}

// Enter your action script here

delete __createfile
delete run.ps1 

createfile until _end_
param (
    $PassThrough
)

$ProcessList = $PassThrough.split(";")

$ProcessList = $ProcessList | Select-Object -Unique

New-Item "HKLM:\Software\Inventory" -ErrorAction SilentlyContinue | out-null
New-Item "HKLM:\Software\Inventory\Last Usage" -ErrorAction SilentlyContinue | out-null
New-Item "HKLM:\Software\Inventory\Count" -ErrorAction SilentlyContinue | out-null
New-Item "HKLM:\Software\Inventory\LastPID" -ErrorAction SilentlyContinue | out-null


foreach ($Entry in $ProcessList){{
    $Object = $Entry.split(":")
    $ProcessName = "$($Object[0]);$($Object[1])"
    $ProcessPID = "$($Object[2])"
    
	if ($ProcessName -contains ";") {{continue;}

    Set-ItemProperty -Path "HKLM:\Software\Inventory\Last Usage" -Name $ProcessName -value "$(get-date -Format "ddd, dd MMM yyyy HH:mm:ss zz00")"

    #Check to see if PID has changed since last time
    if ((get-item -path "HKLM:\Software\Inventory\LastPID").GetValue($ProcessName) -eq $ProcessPID) {{
       continue
    } else {{
        Set-ItemProperty -Path "HKLM:\Software\Inventory\LastPID" -Name $ProcessName -value $ProcessPID
    }

    if ((get-item -path "HKLM:\Software\Inventory\Count").GetValue($ProcessName)) {{
       Set-ItemProperty -Path "HKLM:\Software\Inventory\Count" -Name $ProcessName -value ((get-item -path "HKLM:\Software\Inventory\Count").GetValue($ProcessName)+1) 
    } else {{
        Set-ItemProperty -Path "HKLM:\Software\Inventory\Count" -Name $ProcessName -value 1
    }
}
_end_

move __createfile run.ps1

waithidden { pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry) } -NoProfile -File "{pathname of client folder of current site}\run.ps1" -ExecutionPolicy Bypass -PassThrough "{concatenation ";" of unique values of (name of it & ":" & version of image file of it as string & ":" & ppid of it as string) of processes whose (exists image file of it and exists version of image file of it and exists name of it and ppid of it = pid of processes "explorer.exe")}"]]></ActionScript>
			<SuccessCriteria Option="RunToCompletion"></SuccessCriteria>
		</DefaultAction>
		<Action ID="3">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to review this task in the bigfix.me Content Database.</PostLink>
			</Description>
			<ActionScript MIMEType="text/x-uri">http://bigfix.me/cdb/fixlet/12947</ActionScript>
		</Action>
	</Fixlet>
</BES>

